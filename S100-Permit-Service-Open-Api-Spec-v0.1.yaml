openapi: 3.0.1
info:
  title: UKHO S100 Permit Service API
  description: |
    This API provides functionality to generate signed PERMIT.XML files 
    using the S-100 Part 15 data protection scheme. It enables users to request permits 
    for specific products and retrieve them as a compressed ZIP file.
  contact:
    name: UKHO
    email: abzudeliveryteam@ukho.gov.uk
  version: 0.0.1
  
externalDocs:
  url: https://github.com/UKHO/s-100-permit-service
  
servers:
  - url: https://{environment}.s100.permit-service.com
    description: UKHO Permit Service API Environment
    variables:
      environment:
        default: local
        enum:
          - local
          - dev
          - vnextiat
          - vnexte2e
          - iat
          - preProd
          - live

security:
  - jwtBearerAuth: []
  
paths:
  /v1/permits/s100:
    post:
      description: |
        Generates signed PERMIT.XML files for requested products and user permits (UPNs),
        returning them in a compressed ZIP file.
      operationId: getS100Permits
      parameters:
        - name: Authorisation
          in: header
          required: true
          schema:
            type: string
          description: "Bearer token, where token is a valid JWT token"
        - name: X-Correlation-ID
          in: header
          required: false
          schema:
            type: string
          description: Request tracing identifier      
      requestBody:
        description: |
          The JSON body containing products and user permits, for which the permits are to be generated.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: '#/components/schemas/product'
                userPermits:
                  type: array
                  items:
                    $ref: '#/components/schemas/userPermit'
            example: { 
                        "products": 
                        [
                            {
                                "productName": "101GB40304A",
                                "editionNumber": 3,
                                "permitExpiryDate": "2025-01-31"
                            },
                            {
                                "productName": "102GB40304B",
                                "editionNumber": 3,
                                "permitExpiryDate": "2025-01-31"
                            }
                        ],
                        "userPermits": 
                        [
                            {
                                "title": "IHO Test System",
                                "upn": "AD1DAD797C966EC9F6A55B66ED98281599B3C7B1859868"
                            },
                            {
                                "title": "OeM Test 1",
                                "upn": "BD1DAD797C966EC9F6A55B66ED98281550ACCF0E859868"
                            }
                         ],
                    }
      responses:
        "200":
          description: OK - Returns permit files in a compressed ZIP file.
          headers:
            X-Correlation-ID:
              description: GUID for the request for logging/tracing
              schema:
                type: string
            Content-Disposition:
              schema:
                type: string
                format: filename=permits.zip; filename*=UTF-8''Permits.zip
          content:
            application/zip:
              schema:
                title: S100 Permits ZIP File
                type: string
                format: binary
        "204":
          description: No Content - There are no S100 permits for the given products and user permits.
          headers:
            X-Correlation-ID:
              description: GUID for the request for logging/tracing
              schema:
                type: string
        "400":
          description: Bad Request - The request is invalid.
          headers:
            X-Correlation-ID:
              description: GUID for the request for logging/tracing
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorDescription'
              example:
                correlationId: 6c254109-8a0f-4446-8649-721775ba9de2
                errors:
                - source: "userPermits[0].upn"
                  description: Invalid user permit
        "401":
          description: Unauthorised - Either you have not provided a valid token, or your token is not recognised.
          headers:
            X-Correlation-ID:
              description: GUID for the request for logging/tracing
              schema:
                type: string
          content: {}
        "403":
          description: Forbidden - You are not authorised to access this resource.
          headers:
            X-Correlation-ID:
              description: GUID for the request for logging/tracing
              schema:
                type: string
        "500":
          description: Internal Server Error - An error occurred on the server.
          headers:
            X-Correlation-ID:
              description: GUID for the request for logging/tracing
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exceptionDescription'
components:
  schemas:
    product:
      type: object
      properties:
        productName:
          type: string
          maxLength: 255
        editionNumber:
          type: integer
          minimum: 1
        permitExpiryDate:
          type: string
          format: date
    userPermit:
      type: object
      properties:
        title:
          type: string
        upn:
          type: string
    exceptionDescription:
      type: object
      properties:
        correlationId:
          type: string
    errorDescription:
      type: object
      properties:
        correlationId:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/fieldError'
    fieldError:
      type: object
      properties:
        source:
          type: string
        description:
          type: string
  securitySchemes:
    jwtBearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT